{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\OneDrive\\\\Desktop\\\\University\\\\Code\\\\Uncommon Hacks 2023\\\\AnimeWordle\\\\anime-wordle\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [solution, setSolution] = useState(\"FMA\");\n  const [guess, setGuess] = useState(\"\");\n  const [lastGuess, setLastGuess] = useState(guess);\n  function guessInput(event) {\n    setGuess(event.target.value);\n  }\n  function onClick() {\n    setLastGuess(guess);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Anime Wordle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), solution && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Solution is \", solution]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Guess your anime: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"guess\",\n      value: guess,\n      onChange: guessInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Input was: \", lastGuess]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8q2hGhHo2X67iww9Ps9ZkIMToMQ=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","solution","setSolution","guess","setGuess","lastGuess","setLastGuess","guessInput","event","target","value","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/jonat/OneDrive/Desktop/University/Code/Uncommon Hacks 2023/AnimeWordle/anime-wordle/src/App.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState, useEffect } from \"react\"\n\nexport default function App() {\n  const [solution, setSolution] = useState(\"FMA\");\n  const [guess, setGuess] = useState(\"\");\n  const [lastGuess, setLastGuess] = useState(guess)\n\n  function guessInput(event: { target: { value: React.SetStateAction<string>; }; }){\n    setGuess(event.target.value)\n  }\n  function onClick(){\n    setLastGuess(guess)\n  }\n\n  return (\n    <div className = \"App\">\n      <p>Anime Wordle</p>\n      {solution && <div>Solution is {solution}</div>}\n      <label>Guess your anime: </label>\n      <input type = \"text\" \n        id = \"guess\" \n        value = {guess} \n        onChange={guessInput}>\n      </input>\n      <button onClick={onClick}>Enter</button>\n      <p>Input was: {lastGuess}</p>\n    </div>\n  );\n}\n\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAmB,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAACO,KAAK,CAAC;EAEjD,SAASI,UAAUA,CAACC,KAA4D,EAAC;IAC/EJ,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B;EACA,SAASC,OAAOA,CAAA,EAAE;IAChBL,YAAY,CAACH,KAAK,CAAC;EACrB;EAEA,oBACEL,OAAA;IAAKc,SAAS,EAAG,KAAK;IAAAC,QAAA,gBACpBf,OAAA;MAAAe,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,EAClBhB,QAAQ,iBAAIH,OAAA;MAAAe,QAAA,GAAK,cAAY,EAACZ,QAAQ;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC9CnB,OAAA;MAAAe,QAAA,EAAO;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACjCnB,OAAA;MAAOoB,IAAI,EAAG,MAAM;MAClBC,EAAE,EAAG,OAAO;MACZT,KAAK,EAAIP,KAAM;MACfiB,QAAQ,EAAEb;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACf,eACRnB,OAAA;MAAQa,OAAO,EAAEA,OAAQ;MAAAE,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACxCnB,OAAA;MAAAe,QAAA,GAAG,aAAW,EAACR,SAAS;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzB;AAEV;AAACjB,EAAA,CA1BuBD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}