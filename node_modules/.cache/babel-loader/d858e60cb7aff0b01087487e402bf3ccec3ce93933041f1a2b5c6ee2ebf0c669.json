{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\OneDrive\\\\Desktop\\\\University\\\\Code\\\\Uncommon Hacks 2023\\\\AnimeWordle\\\\anime-wordle\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [solution, setSolution] = useState(\"FMA\");\n  const [guess, setGuess] = useState(\"\");\n  const [lastGuess, setLastGuess] = useState(guess);\n  const [tries, setTries] = useState(0);\n  function guessInput(event) {\n    setGuess(event.target.value);\n  }\n  ;\n  function onClick() {\n    setLastGuess(guess);\n    setTries(tries + 1);\n  }\n  ;\n  if (lastGuess === solution) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You Win!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The solution was \", solution]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }, this);\n  }\n  if (tries > 7) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sorry, you lost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The solution was \", solution]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Anime Wordle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Guess your anime: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"guess\",\n      value: guess,\n      onChange: guessInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Input was: \", lastGuess]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You have guess \", tries, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Qyi0HQzUGmwR61Y03rNH1dFxUDM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","solution","setSolution","guess","setGuess","lastGuess","setLastGuess","tries","setTries","guessInput","event","target","value","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/jonat/OneDrive/Desktop/University/Code/Uncommon Hacks 2023/AnimeWordle/anime-wordle/src/App.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState, useEffect } from \"react\"\n\nexport default function App() {\n  const [solution, setSolution] = useState(\"FMA\");\n  const [guess, setGuess] = useState(\"\");\n  const [lastGuess, setLastGuess] = useState(guess);\n  const [tries, setTries] = useState(0);\n\n  function guessInput(event: { target: { value: React.SetStateAction<string>; }; }){\n    setGuess(event.target.value);\n  };\n  function onClick(){\n    setLastGuess(guess);\n    setTries(tries + 1);\n  };\n\n  if(lastGuess === solution){\n    return(\n     <div>\n      <p>You Win!</p>\n      <p>The solution was {solution}</p>\n     </div>\n    )\n  }\n\n  if(tries > 7){\n    return(\n      <div>\n      <p>Sorry, you lost</p>\n      <p>The solution was {solution}</p>\n    </div>\n    )\n  }\n\n  return (\n    <div className = \"App\">\n      <p>Anime Wordle</p>\n      <label>Guess your anime: </label>\n      <input type = \"text\" \n        id = \"guess\" \n        value = {guess} \n        onChange={guessInput}>\n      </input>\n      <button onClick={onClick}>Enter</button>\n      <p>Input was: {lastGuess}</p>\n      <p>You have guess {tries} times</p>\n    </div>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}